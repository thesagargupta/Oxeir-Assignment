version: '3.8'

services:
  # Frontend (React app)
  frontend:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:3001
      - REACT_APP_SOCKET_URL=http://localhost:3001
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - workshop-network

  # Backend (Express API)
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - MONGODB_URI=mongodb://mongo:27017/workshop-schedule
      - JWT_SECRET=your-super-secret-jwt-key
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    networks:
      - workshop-network

  # MongoDB database
  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password123
      - MONGO_INITDB_DATABASE=workshop-schedule
    restart: unless-stopped
    networks:
      - workshop-network

  # Redis for caching and sessions
  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - workshop-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - workshop-network

volumes:
  mongo_data:
  redis_data:

networks:
  workshop-network:
    driver: bridge